package application.controller;

import java.io.IOException;

import javafx.concurrent.Task;
import javafx.scene.Scene;
import javafx.scene.control.ProgressBar;
import javafx.scene.layout.BorderPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class ShowProgressThread extends Thread {
	private Task cloneWorker;
	private int time;
	
	public ShowProgressThread(int time){
		this.time=time;
	}
	@Override
	public void run(){
		try {
			showProgressBar(time);
		} catch (InterruptedException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private void showProgressBar(int time) throws InterruptedException, IOException{
		Stage stage=new Stage();
    	BorderPane progressPane = new BorderPane();
        Scene scene = new Scene(progressPane, 200, 120, Color.DIMGRAY);
        final ProgressBar progressBar = new ProgressBar(0);
        progressPane.setCenter(progressBar);
        
        //创造进度条的移动
        progressBar.setProgress(0);
        cloneWorker = createWorker(time);
        progressBar.progressProperty().unbind();
        progressBar.progressProperty().bind(cloneWorker.progressProperty());
        new Thread(cloneWorker).start();
        stage.setScene(scene);
        stage.show();
	}
	
	public Task createWorker(int time) {
        return new Task() {
            @Override
            protected Object call() throws Exception {
                for (int i = 0; i < 100; i++) {
                    Thread.sleep(time/100);
                    updateProgress(i + 1, 100);
                }
                return true;
            }
        };
    }
}
